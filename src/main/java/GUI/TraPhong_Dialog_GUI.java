/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package GUI;

import java.awt.Color;
import java.awt.Window;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

import Components.ExportFile;
import DAO.ChiTietHoaDon_DAO;
import DAO.DanhSachDatPhong_DAO;
import DAO.HoaDon_DAO;
import DAO.KhachHang_DAO;
import DAO.NhanVien_DAO;
import DAO.PhieuDatPhong_DAO;
import DAO.Phong_DAO;
import ENTITY.HoaDon;
import ENTITY.KhachHang;
import ENTITY.NhanVien;
import ENTITY.PhieuDatPhong;

/**
 *
 * @author Admin
 */
public class TraPhong_Dialog_GUI extends javax.swing.JDialog {
	private static ChiTietDatPhong_Dialog chiTietDP;
	private static PhieuDatPhong phieuDatPhong;
    private static String maPhong;
    private DanhSachDatPhong_DAO dsDatPhongDAO= new DanhSachDatPhong_DAO();  // Khởi tạo DAO
    private ChiTietHoaDon_DAO ctHoaDonDAO = new ChiTietHoaDon_DAO();


    /**
     * Creates new form TraPhong_Dialog
     */
    public TraPhong_Dialog_GUI(Window parent, boolean modal, String maPhong,PhieuDatPhong phieuDatPhong, ChiTietDatPhong_Dialog chiTietDP) {
        super();
        this.maPhong = maPhong;
        this.chiTietDP = chiTietDP;
        initComponents();
        setLocationRelativeTo(null);
         
        loadDuLieuDSHD(phieuDatPhong.getMaPDP());
        loadDuLieuDSDV(maPhong);
        
        // Khởi tạo các listeners để theo dõi sự thay đổi của txtPhuThu
        initializeListeners();
        
        handleTotalAmountChange();
        lbMaPhong.setText(maPhong);
        txtKhuyenMai.setText("5");
        txtThue.setText("10");
        updateRoomInfo(maPhong);
        tinhTongThanhToan();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtTenKH = new javax.swing.JTextField();
        cboLoaiHinh = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cboPhuongThuc = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtTienCoc = new javax.swing.JTextField();
        txtKhuyenMai = new javax.swing.JTextField();
        txtThue = new javax.swing.JTextField();
        txtTongThanhToan = new javax.swing.JTextField();
        txtTienTraKhach = new javax.swing.JTextField();
        txtTienKhachDua = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbDanhSachHoaDon = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbDanhSachDichVu = new javax.swing.JTable();
        btnHuy = new javax.swing.JButton();
        btnTraPhongVaIn = new javax.swing.JButton();
        lbMaPhong = new javax.swing.JLabel();
        btnTien1 = new javax.swing.JButton();
        btnTien4 = new javax.swing.JButton();
        btnTien3 = new javax.swing.JButton();
        btnTien2 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        txtPhuThu = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Trả phòng");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Tên khách hàng");

        txtTenKH.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTenKH.setEnabled(false);

        cboLoaiHinh.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cboLoaiHinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ngày đêm", "Giờ" }));
        cboLoaiHinh.setToolTipText("");
        cboLoaiHinh.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Phương thức");

        cboPhuongThuc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cboPhuongThuc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tiền mặt" }));
        cboPhuongThuc.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Loại hình");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("KM (%)");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("VAT (%)");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Khách đưa");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Trả Khách");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Tổng thanh toán");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Tiền cọc");

        txtTienCoc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTienCoc.setEnabled(false);

        txtKhuyenMai.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtKhuyenMai.setText("0");
        txtKhuyenMai.setEnabled(false);
        txtKhuyenMai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKhuyenMaiActionPerformed(evt);
            }
        });

        txtThue.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtThue.setText("10");
        txtThue.setEnabled(false);
        txtThue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtThueActionPerformed(evt);
            }
        });

        txtTongThanhToan.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtTongThanhToan.setForeground(new java.awt.Color(255, 0, 0));
        txtTongThanhToan.setEnabled(false);
        txtTongThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTongThanhToanActionPerformed(evt);
            }
        });

        txtTienTraKhach.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtTienTraKhach.setForeground(new java.awt.Color(0, 0, 255));
        txtTienTraKhach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTienTraKhachActionPerformed(evt);
            }
        });

        txtTienKhachDua.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtTienKhachDua.setForeground(new java.awt.Color(255, 0, 0));
        txtTienKhachDua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTienKhachDuaActionPerformed(evt);
            }
        });

        tbDanhSachHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Stt", "Phòng", "Nhận phòng", "Trả phòng", "Tiền phòng", "Tổng tiền"
            }
        ));
        jScrollPane1.setViewportView(tbDanhSachHoaDon);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Danh sách hóa đơn");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("Hóa đơn phòng");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setText("Hóa đơn sản phẩm và dịch vụ");

        tbDanhSachDichVu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Stt", "Tên sản phẩm, dịch vụ", "Số lượng", "Đơn giá", "Thành tiền"
            }
        ));
        jScrollPane2.setViewportView(tbDanhSachDichVu);

        btnHuy.setBackground(new java.awt.Color(153, 153, 153));
        btnHuy.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnHuy.setText("Hủy");
        btnHuy.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHuy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHuyMouseClicked(evt);
            }
        });
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });

        btnTraPhongVaIn.setBackground(new java.awt.Color(25, 159, 254));
        btnTraPhongVaIn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnTraPhongVaIn.setForeground(new java.awt.Color(255, 255, 255));
        btnTraPhongVaIn.setText("Trả phòng & in");
        btnTraPhongVaIn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTraPhongVaIn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                try {
					btnTraPhongVaInMouseClicked(evt);
				} catch (ParseException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });
        btnTraPhongVaIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraPhongVaInActionPerformed(evt);
            }
        });

        lbMaPhong.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbMaPhong.setForeground(new java.awt.Color(255, 0, 0));
        lbMaPhong.setText("P101");

        btnTien1.setText("jButton1");

        btnTien4.setText("jButton1");

        btnTien3.setText("jButton1");

        btnTien2.setText("jButton1");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setText("Phụ thu");

        txtPhuThu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtPhuThu.setText("0");
        txtPhuThu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhuThuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lbMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel14)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtTienCoc, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(cboLoaiHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(18, 18, 18)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel6)
                                                .addComponent(jLabel7)))))
                                .addGap(38, 38, 38)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtThue, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtKhuyenMai, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPhuThu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtTienTraKhach, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(cboPhuongThuc, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel10)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtTongThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnTien3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnTien1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnTien2, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                            .addComponent(btnTien4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtTienKhachDua, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 946, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jScrollPane2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnTraPhongVaIn)))
                        .addGap(13, 13, 13))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lbMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel14)
                            .addComponent(txtPhuThu, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtTienCoc, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboLoaiHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10)
                                .addComponent(txtTongThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8))
                            .addComponent(txtTienKhachDua, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(txtKhuyenMai, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGap(14, 14, 14))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnTien1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnTien2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboPhuongThuc, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtThue, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(txtTienTraKhach, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTien3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTien4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)))
                .addGap(10, 10, 10)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTraPhongVaIn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtKhuyenMaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKhuyenMaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKhuyenMaiActionPerformed

    private void txtThueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtThueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtThueActionPerformed

    private void txtTongThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTongThanhToanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTongThanhToanActionPerformed

    private void txtTienTraKhachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTienTraKhachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTienTraKhachActionPerformed

    private void txtTienKhachDuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTienKhachDuaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTienKhachDuaActionPerformed

    private void btnHuyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHuyMouseClicked
        dispose();
    }//GEN-LAST:event_btnHuyMouseClicked

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnHuyActionPerformed

    private void btnTraPhongVaInMouseClicked(java.awt.event.MouseEvent evt) throws ParseException {//GEN-FIRST:event_btnTraPhongVaInMouseClicked
    	try {
    		Phong_DAO phongDAO = new Phong_DAO();
    		NhanVien_DAO nvDAO = new NhanVien_DAO();
    		PhieuDatPhong_DAO pdpDAO = new PhieuDatPhong_DAO();
    		HoaDon_DAO hdDAO = new HoaDon_DAO();
    		// Lấy mã nhân viên từ đăng nhập
            String maNhanVienLap = Login_GUI.maNhanVien; 
            KhachHang_DAO khDAO = new KhachHang_DAO();
            String maPDP = pdpDAO.getMaPDPByMaPhong(maPhong);
            String tenKH = txtTenKH.getText();
            String maHD = hdDAO.getMaHoaDonFromMaPhong(maPhong);
            
            // Lấy mã phòng
            String maPhong = lbMaPhong.getText();
            String maKH = khDAO.layMaKhachHangTheoMaPhong(maPhong);
            String cccd = khDAO.getCCCDByMaKhachHang(maKH);
            String loaiPhong = phongDAO.getLoaiPhongByMaPhong(maPhong);
            KhachHang kh = new KhachHang(cccd);
            kh.setMaKhachHang(maKH);
            kh.setTenKhachHang(tenKH);
            
            System.out.println("MÃ Khách Hàng: "+maKH);
            // Định dạng ngày cần chuyển
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            java.util.Date ngaylap = new java.util.Date(); // Ngày hiện tại
            
            String ngayNhan = null;
            String ngayTra = null;
            
            // Lấy NgayNhanPhong và NgayTraPhong từ bảng
            for (int i = 0; i < tbDanhSachHoaDon.getRowCount(); i++) {
                Object valueCol3 = tbDanhSachHoaDon.getValueAt(i, 2); // Cột NgayNhanPhong
                Object valueCol4 = tbDanhSachHoaDon.getValueAt(i, 3); // Cột NgayTraPhong
                if (valueCol3 != null) {
                    ngayNhan = valueCol3.toString();
                }
                if (valueCol4 != null) {
                    ngayTra = valueCol4.toString();
                }
            }
            
            // Chuyển chuỗi sang java.sql.Date
            java.sql.Date ngaylapSQL = new java.sql.Date(ngaylap.getTime());
            
            java.util.Date ngayNhanPhong = dateFormat.parse(ngayNhan);
            java.sql.Date ngayNhanPhongSQL = new java.sql.Date(ngayNhanPhong.getTime());

            java.util.Date ngayTraPhong = dateFormat.parse(ngayTra);
            java.sql.Date ngayTraPhongSQL = new java.sql.Date(ngayTraPhong.getTime());
            
         // Lấy giá trị từ các ô nhập liệu và loại bỏ dấu "," và "."
            String tienTraKhachText = txtTienTraKhach.getText().replace(",", "").replace(".", "");
            String tongThanhToanText = txtTongThanhToan.getText().replace(",", "").replace(".", "");
            String thueText = txtThue.getText().replace(",", "").replace(".", "");
            
            Double tienTraKhach = Double.parseDouble(tienTraKhachText);
    	    Double tongThanhToan = Double.parseDouble(tongThanhToanText);
    	    int thue = Integer.parseInt(thueText);

            // Tạo đối tượng HoaDon
            NhanVien nv = new NhanVien(maNhanVienLap);
            String tenNV = nvDAO.getTenNVByMaNV(maNhanVienLap);
            nv.setTenNhanVien(tenNV);
            System.out.println("tên Nhân viên: " + tenNV);
            
            HoaDon hd = new HoaDon();
            hd.setMaHoaDon(maHD);
            hd.setNhanVienLap(nv);
            hd.setKhachHang(kh);
            hd.setNgayLap(ngaylapSQL); // Lấy ngày hiện tại
            hd.setNgayNhanPhong(ngayNhanPhongSQL);
            hd.setNgayTraPhong(ngayTraPhongSQL);
            hd.setTienTraKhach(tienTraKhach);
            hd.setTongTien(tongThanhToan);
            hd.setThue(thue);

            String phuThu = txtPhuThu.getText();
            String km = txtKhuyenMai.getText();
            double tongTienPhong = 0.0;
            double tongTienDichVu = 0.0;

            // Tính tổng tiền từ bảng tbDanhSachHoaDon (cột Tổng tiền)
            for (int i = 0; i < tbDanhSachHoaDon.getRowCount(); i++) {
                Object value = tbDanhSachHoaDon.getValueAt(i, 5); // Cột 5: Tổng tiền
                if (value != null) {
                	tongTienPhong += Double.parseDouble(value.toString());
                }
            }

            // Tính tổng tiền từ bảng tbDanhSachDichVu (cột Thành tiền)
            for (int i = 0; i < tbDanhSachDichVu.getRowCount(); i++) {
                Object value = tbDanhSachDichVu.getValueAt(i, 4); // Cột 4: Thành tiền
                if (value != null) {
                    tongTienDichVu += Double.parseDouble(value.toString());
                }
            }
            
            // Cập nhật thông tin vào cơ sở dữ liệu
            boolean success = hdDAO.capNhatHoaDon(hd, maPhong, maNhanVienLap);
            
            // Thông báo kết quả
            if(success) {
                dispose(); // Đóng cửa sổ hiện tại
                JOptionPane.showMessageDialog(this, "Thanh toán thành công!");
                phongDAO.capNhatTrangThaiPhong(maPhong, "PHONG_TRONG");
                phongDAO.updateTinhTrangPhong(maPhong, "CHUA_DON");
                dsDatPhongDAO.capNhatTrangThaiPhieuDatPhong(maPDP, "Hoàn thành");
//    	        phongGUI.updateRoomColor(maPhong, Color.decode("#004B97"));
                
                ExportFile exportFile = new ExportFile();
                exportFile.exportInvoiceToPDF(hd, maPhong, loaiPhong, phuThu, km, tongTienPhong, tongTienDichVu, kh, tbDanhSachDichVu.getModel());
            }
            else {
                JOptionPane.showMessageDialog(this, "Thanh toán thất bại!");
            }
		} catch (Exception e) {
			e.printStackTrace();
		}
    }//GEN-LAST:event_btnTraPhongVaInMouseClicked

    private void btnTraPhongVaInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraPhongVaInActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTraPhongVaInActionPerformed

    private void txtPhuThuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhuThuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhuThuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TraPhong_Dialog_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TraPhong_Dialog_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TraPhong_Dialog_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TraPhong_Dialog_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Window window = SwingUtilities.getWindowAncestor(chiTietDP);
                TraPhong_Dialog_GUI dialog = new TraPhong_Dialog_GUI(window, true, maPhong,phieuDatPhong, chiTietDP);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

 // Phương thức cập nhật thông tin phòng lên giao diện
    public void updateRoomInfo(String maPhong) {
        // Lấy thông tin về phòng từ DAO
        PhieuDatPhong pdp = dsDatPhongDAO.getRoomInfo(maPhong);

        // Kiểm tra pdp có phải là null không
        if (pdp == null) {
            // Nếu pdp là null, thông báo lỗi hoặc xử lý theo yêu cầu
            JOptionPane.showMessageDialog(this, "Không tìm thấy thông tin phòng!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Kiểm tra nếu khách hàng là null hoặc tên khách hàng là rỗng, gán "Khách lẻ"
        if (pdp.getKhachHang() == null) {
        	System.out.println("Khách lẻ");
            txtTenKH.setText("Khách lẻ");
        } else {
            txtTenKH.setText(pdp.getKhachHang().getTenKhachHang());
        }

        // Cập nhật các trường thông tin còn lại
        txtTienCoc.setText(String.valueOf(pdp.getTienCoc()));
        cboLoaiHinh.setSelectedItem(pdp.getLoaiHinh());
    }
    
    // Phương thức để tải dữ liệu vào JTable từ phương thức DAO
    public void loadDuLieuDSHD(String maPDP) {
        // Lấy dữ liệu từ DAO
        List<Object[]> danhSach = dsDatPhongDAO.getDanhSachDatPhong(maPDP);

        // Lấy DefaultTableModel của JTable
        DefaultTableModel model = (DefaultTableModel) tbDanhSachHoaDon.getModel();

        // Xóa các dòng cũ trong bảng nếu có
        model.setRowCount(0);

        // Thêm dữ liệu vào bảng
        for (Object[] row : danhSach) {
            model.addRow(row);
        }
        tinhTongThanhToan();
    }
    
 // Phương thức để tải dữ liệu vào JTable từ DAO
    public void loadDuLieuDSDV(String maPhong) {
        List<Object[]> danhSach = ctHoaDonDAO.getChiTietHoaDonByMaPhong(maPhong);

        DefaultTableModel model = (DefaultTableModel) tbDanhSachDichVu.getModel();

        // Xóa dữ liệu cũ trong bảng
        model.setRowCount(0);

        // Thêm dòng dữ liệu vào bảng
        for (Object[] row : danhSach) {
            model.addRow(row);
        }
        tinhTongThanhToan();
    }
    
    private void tinhTongThanhToan() {
        double tongTienHoaDon = 0.0;
        double tongTienDichVu = 0.0;

        // Tính tổng tiền từ bảng tbDanhSachHoaDon (cột Tổng tiền)
        for (int i = 0; i < tbDanhSachHoaDon.getRowCount(); i++) {
            Object value = tbDanhSachHoaDon.getValueAt(i, 5); // Cột 5: Tổng tiền
            if (value != null) {
                tongTienHoaDon += Double.parseDouble(value.toString());
            }
        }

        // Tính tổng tiền từ bảng tbDanhSachDichVu (cột Thành tiền)
        for (int i = 0; i < tbDanhSachDichVu.getRowCount(); i++) {
            Object value = tbDanhSachDichVu.getValueAt(i, 4); // Cột 4: Thành tiền
            if (value != null) {
                tongTienDichVu += Double.parseDouble(value.toString());
            }
        }

        // Tính tổng thanh toán cơ bản
        double tongThanhToan = tongTienHoaDon + tongTienDichVu;

        // Lấy giá trị từ các trường txtPhuThu, txtKhuyenMai, txtThue
        double phuThu = 0.0;
        double khuyenMai = 0.0;
        double thue = 0.0;

        // Kiểm tra và lấy giá trị từ các trường (nếu có giá trị hợp lệ)
        try {
            phuThu = Double.parseDouble(txtPhuThu.getText().trim());
        } catch (NumberFormatException e) {
            phuThu = 0.0;
        }

        try {
            khuyenMai = Double.parseDouble(txtKhuyenMai.getText().trim()) / 100; // Khuyến mãi tính theo %
        } catch (NumberFormatException e) {
            khuyenMai = 0.0;
        }

        try {
            thue = Double.parseDouble(txtThue.getText().trim()) / 100; // Thuế tính theo %
        } catch (NumberFormatException e) {
            thue = 0.0;
        }

        // Tính tổng thanh toán: Áp dụng khuyến mãi và thuế
        double tongThanhToanSauKhuyenMai = tongThanhToan * (1 - khuyenMai); // Áp dụng khuyến mãi
        double tongThanhToanSauThue = tongThanhToanSauKhuyenMai * (1 + thue); // Áp dụng thuế

        // Cộng thêm phụ thu vào tổng thanh toán
        tongThanhToan = tongThanhToanSauThue + phuThu;

        // Làm tròn số theo đơn vị 1,000
        tongThanhToan = Math.ceil(tongThanhToan / 1000) * 1000;
        
        DecimalFormat formatter = new DecimalFormat("###,###");
        String formattedTongThanhToan = formatter.format(tongThanhToan);

        // Hiển thị tổng thanh toán lên txtTongThanhToan
        txtTongThanhToan.setText(formattedTongThanhToan);
        updateTienButtons();
    }
    
    private void initializeListeners() {
    	// Lắng nghe sự thay đổi của txtPhuThu
        txtPhuThu.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                tinhTongThanhToan(); // Tính lại tổng thanh toán khi txtPhuThu thay đổi
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                tinhTongThanhToan(); // Tính lại tổng thanh toán khi txtPhuThu thay đổi
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                tinhTongThanhToan(); // Tính lại tổng thanh toán khi txtPhuThu thay đổi
            }
        });
        
        txtTienKhachDua.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                formatInput();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                formatInput();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                formatInput();
            }

            private void formatInput() {
                // Tạm dừng DocumentListener để tránh vòng lặp vô hạn khi cập nhật text
                try {
                    // Tạm dừng DocumentListener
                    txtTienKhachDua.getDocument().removeDocumentListener(this);

                    // Lấy giá trị hiện tại và loại bỏ tất cả các ký tự không phải số và dấu chấm
                    String input = txtTienKhachDua.getText().replaceAll("[^0-9]", "");

                    if (input.isEmpty()) {
                        txtTienKhachDua.setText("");
                        return; // Nếu không có dữ liệu, không làm gì cả
                    }

                    // Chuyển giá trị thành double và định dạng lại
                    double value = Double.parseDouble(input);

                    // Định dạng lại giá trị và cập nhật vào txtTienKhachDua
//                    txtTienKhachDua.setText(value);
//                    txtTienKhachDua.setText(formatCurrency(value));

                } catch (NumberFormatException ex) {
                    // Nếu có lỗi, đặt lại giá trị
                    txtTienKhachDua.setText("");
                } finally {
                    // Bật lại DocumentListener sau khi cập nhật
                    txtTienKhachDua.getDocument().addDocumentListener(this);
                }
            }
        });
    }
 

 // Phương thức tính số tiền khách hàng sẽ đưa
    private void updateTienButtons() {
        // Lấy tổng thanh toán từ txtTongThanhToan
        double tongThanhToan = Double.parseDouble(txtTongThanhToan.getText().replace(".", "").replace(",", "")); // Xóa dấu phẩy để lấy giá trị dạng số

        // Mảng các mệnh giá tiền phổ biến từ 100,000 đến 2,000,000 VND
        double[] tienKhachDua = {
            100000, 110000, 120000, 130000, 140000, 150000, 160000, 170000, 180000, 190000,
            200000, 210000, 220000, 230000, 240000, 250000, 260000, 270000, 280000, 290000,
            300000, 310000, 320000, 330000, 340000, 350000, 360000, 370000, 380000, 390000,
            400000, 410000, 420000, 430000, 440000, 450000, 460000, 470000, 480000, 490000,
            500000, 510000, 520000, 530000, 540000, 550000, 560000, 570000, 580000, 590000,
            600000, 610000, 620000, 630000, 640000, 650000, 660000, 670000, 680000, 690000,
            700000, 710000, 720000, 730000, 740000, 750000, 760000, 770000, 780000, 790000,
            800000, 810000, 820000, 830000, 840000, 850000, 860000, 870000, 880000, 890000,
            900000, 910000, 920000, 930000, 940000, 950000, 960000, 970000, 980000, 990000,
            1000000, 1100000, 1200000, 1300000, 1400000, 1500000, 1600000, 1700000, 1800000, 1900000, 
            2000000
        };

        // Nút đầu tiên: Làm cho btnTien1 bằng với tổng thanh toán
        double tienKhachDua1 = tongThanhToan;

        // Tính các mệnh giá tiếp theo cho btnTien2 và btnTien3
        double tienKhachDua2 = getNextHigherAmount(tongThanhToan, tienKhachDua, tienKhachDua1);
        double tienKhachDua3 = getNextHigherAmount(tongThanhToan, tienKhachDua, tienKhachDua2);

        // Nút thứ tư: Là mệnh giá lớn hơn mệnh giá của btnTien3
        double tienKhachDua4 = getNextHigherAmount(tongThanhToan, tienKhachDua, tienKhachDua3, true);

        // Cập nhật text cho các nút với mệnh giá tính được
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                btnTien1.setText(formatCurrency(tienKhachDua1)); // btnTien1 = tổng thanh toán
                btnTien2.setText(formatCurrency(tienKhachDua2));
                btnTien3.setText(formatCurrency(tienKhachDua3));
                btnTien4.setText(formatCurrency(tienKhachDua4));
            }
        });
    }

    // Phương thức làm tròn lên theo quy tắc (tới số chẵn gần nhất)
    private double roundUpToNearest(double amount) {
        // Làm tròn lên đến đơn vị nghìn gần nhất
        return Math.ceil(amount / 1000.0) * 1000;
    }

    // Phương thức trả về mệnh giá lớn hơn tổng thanh toán và không trùng với mệnh giá trước đó
    private double getNextHigherAmount(double tongThanhToan, double[] tienKhachDua, double previousAmount) {
        for (double tien : tienKhachDua) {
            // Tìm mệnh giá lớn hơn tổng thanh toán và không trùng với mệnh giá trước đó
            if (tongThanhToan < tien && tien != previousAmount) {
                return tien;
            }
        }
        return tienKhachDua[tienKhachDua.length - 1]; // Nếu không tìm được mệnh giá lớn hơn, trả về mệnh giá lớn nhất trong mảng
    }

    // Phương thức trả về mệnh giá lớn hơn mệnh giá của btnTien3
    private double getNextHigherAmount(double tongThanhToan, double[] tienKhachDua, double previousAmount, boolean isForBtn4) {
        // Tìm mệnh giá lớn hơn mệnh giá của btnTien3
        boolean found = false;
        for (double tien : tienKhachDua) {
            if (tien > previousAmount) {
                found = true;
                return tien;
            }
        }

        // Nếu không tìm được, trả về mệnh giá lớn nhất trong dãy
        if (!found) {
            return tienKhachDua[tienKhachDua.length - 1];
        }
        return previousAmount;
    }

    // Phương thức định dạng tiền theo kiểu "###.###" với dấu chấm
    private String formatCurrency(double amount) {
        DecimalFormat decimalFormat = new DecimalFormat("#,###");
        return decimalFormat.format(amount).replace(",", ".");
    }
    
 // Phương thức tính tổng thanh toán và cập nhật các nút tiền
    private void handleTotalAmountChange() {
        // Tính toán lại tổng thanh toán sau khi thay đổi các trường nhập liệu (Phụ thu, Khuyến mãi, Thuế)
        tinhTongThanhToan();

        // Cập nhật lại các nút tiền dựa trên tổng thanh toán mới
        updateTienButtons();
        addButtonEvents();
        addTienKhachDuaListener();
    }

    private void addButtonEvents() {
        btnTien1.addActionListener(e -> txtTienKhachDua.setText(btnTien1.getText()));
        btnTien2.addActionListener(e -> txtTienKhachDua.setText(btnTien2.getText()));
        btnTien3.addActionListener(e -> txtTienKhachDua.setText(btnTien3.getText()));
        btnTien4.addActionListener(e -> txtTienKhachDua.setText(btnTien4.getText()));
    }
    
 // Phương thức để thêm listener vào txtTienKhachDua khi người dùng thay đổi giá trị
    private void addTienKhachDuaListener() {
        txtTienKhachDua.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                updateTienTraKhach();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateTienTraKhach();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                updateTienTraKhach();
            }
        });
    }

    // Phương thức cập nhật txtTienTraKhach dựa trên giá trị của txtTienKhachDua và txtTongThanhToan
    private void updateTienTraKhach() {
        try {
            // Lấy tổng thanh toán từ txtTongThanhToan
            double tongThanhToan = Double.parseDouble(txtTongThanhToan.getText().replace(".", "").replace(",", ""));

            // Lấy tiền khách đưa từ txtTienKhachDua
            double tienKhachDua = Double.parseDouble(txtTienKhachDua.getText().replace(".", "").replace(",", ""));

            // Tính tiền trả lại (có thể âm nếu tiền khách đưa nhỏ hơn tổng thanh toán)
            double tienTraKhach = tienKhachDua - tongThanhToan;

            // Cập nhật giá trị vào txtTienTraKhach
            txtTienTraKhach.setText(formatCurrency(tienTraKhach));

        } catch (NumberFormatException ex) {
            // Nếu có lỗi khi parse dữ liệu (trong trường hợp dữ liệu không hợp lệ), đặt giá trị trả lại bằng 0
            txtTienTraKhach.setText("0");
        }
    }





    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnTien1;
    private javax.swing.JButton btnTien2;
    private javax.swing.JButton btnTien3;
    private javax.swing.JButton btnTien4;
    private javax.swing.JButton btnTraPhongVaIn;
    private javax.swing.JComboBox<String> cboLoaiHinh;
    private javax.swing.JComboBox<String> cboPhuongThuc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbMaPhong;
    private javax.swing.JTable tbDanhSachDichVu;
    private javax.swing.JTable tbDanhSachHoaDon;
    private javax.swing.JTextField txtKhuyenMai;
    private javax.swing.JTextField txtPhuThu;
    private javax.swing.JTextField txtTenKH;
    private javax.swing.JTextField txtThue;
    private javax.swing.JTextField txtTienCoc;
    private javax.swing.JTextField txtTienKhachDua;
    private javax.swing.JTextField txtTienTraKhach;
    private javax.swing.JTextField txtTongThanhToan;
    // End of variables declaration//GEN-END:variables
}
