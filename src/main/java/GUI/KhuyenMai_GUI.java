/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;

import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;import javax.swing.table.TableModel;
import javax.swing.text.AbstractDocument;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;

import com.toedter.calendar.JDateChooser;

import ConnectDB.ConnectDB;
import DAO.KhachHang_DAO;
import DAO.KhuyenMai_DAO;
import ENTITY.KhachHang;
import ENTITY.KhuyenMai;
import java.awt.Frame;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;

import javax.print.attribute.AttributeSet;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author 84837
 */
public class KhuyenMai_GUI extends javax.swing.JPanel {

    /**
     * Creates new form KhachHang_GUI
     */
    public KhuyenMai_GUI() {
        initComponents();
        updateHeader();
        loadDataToTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        titleHoaDon = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbKhuyenMai = new javax.swing.JTable();
        btnCapNhat = new javax.swing.JPanel();
        lblCapNhat = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btnThemKhuyenMai = new javax.swing.JLabel();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 704, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 467, Short.MAX_VALUE)
        );

        setLayout(new java.awt.CardLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        titleHoaDon.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        titleHoaDon.setText("Danh sách khuyến mãi");

        tbKhuyenMai.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã khuyến mãi", "Mô tả", "Ngày bắt đầu", "Ngày kết thúc", "Chiết khấu (%)", "Trạng thái"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Float.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbKhuyenMai.setRowHeight(40);
        jScrollPane1.setViewportView(tbKhuyenMai);

        btnCapNhat.setBackground(new java.awt.Color(245, 109, 40));
        btnCapNhat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        lblCapNhat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblCapNhat.setForeground(new java.awt.Color(255, 255, 255));
        lblCapNhat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCapNhat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/fixing.png"))); // NOI18N
        lblCapNhat.setText("Cập nhật");

        javax.swing.GroupLayout btnCapNhatLayout = new javax.swing.GroupLayout(btnCapNhat);
        btnCapNhat.setLayout(btnCapNhatLayout);
        btnCapNhatLayout.setHorizontalGroup(
            btnCapNhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblCapNhat, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
        );
        btnCapNhatLayout.setVerticalGroup(
            btnCapNhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnCapNhatLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblCapNhat)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(25, 159, 254));
        jPanel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        btnThemKhuyenMai.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThemKhuyenMai.setForeground(new java.awt.Color(255, 255, 255));
        btnThemKhuyenMai.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnThemKhuyenMai.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/add.png"))); // NOI18N
        btnThemKhuyenMai.setText("Thêm khuyến mãi");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnThemKhuyenMai)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnThemKhuyenMai)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 703, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 908, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(titleHoaDon)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 547, Short.MAX_VALUE))
        );

        add(jPanel1, "card2");
    }// </editor-fold>//GEN-END:initComponents

   

    
    
     
    
    
    private void updateHeader(){
        JTableHeader header = tbKhuyenMai.getTableHeader();
         header.setFont(new Font("Times new Romans", Font.BOLD, 16)); 
    }
//    Hàm đổ dữ liệu từ database vào JTable
    private void loadDataToTable() {
    	KhuyenMai_DAO khuyenMaiDAO = new KhuyenMai_DAO();
        List<KhuyenMai> dsKhuyenMai = khuyenMaiDAO.getAllKhuyenMai();
        
      DefaultTableModel tableModel = new DefaultTableModel(
		    new Object[][] {},  // Bắt đầu với dữ liệu rỗng
		    new String[] { "Mã khuyến mãi", "Mô tả", "Ngày bắt đầu", "Ngày kết thúc", "Chiết khấu","Trạng thái" }
		);
  	tbKhuyenMai.setModel(tableModel);
        
        tableModel.setRowCount(0);

        // Định dạng ngày theo dd/MM/yyyy
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");

        for (KhuyenMai km : dsKhuyenMai) {
            Object[] row = {
                km.getMakhuyenMai(),
                km.getMoTa(),
                dateFormat.format(km.getNgayBatDau()),
                dateFormat.format(km.getNgayKetThuc()),
                String.valueOf(km.getChietKhau()),
                km.getTrangThai()
            };
            tableModel.addRow(row);
        }
        lblCapNhat.setEnabled(false);
        btnCapNhat.setEnabled(false);
        
        tbKhuyenMai.getSelectionModel().addListSelectionListener(e -> {
        	if(!e.getValueIsAdjusting()) {
        		boolean isRowSelected = tbKhuyenMai.getSelectedRow() != -1;
        				lblCapNhat.setEnabled(isRowSelected);
        				btnCapNhat.setEnabled(isRowSelected);
        	}
        });
        
        lblCapNhat.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				if (tbKhuyenMai.getSelectedRow() != -1) { // Check if a row is selected
					updateKhuyenMai();
					; // Call update service dialog method
				}
			}
		});
        
        btnCapNhat.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				if (tbKhuyenMai.getSelectedRow() != -1) { // Check if a row is selected
					updateKhuyenMai(); // Call update service dialog method
				}
			}
		});
        
        
        btnCapNhat.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				 updateKhuyenMai(); // Call update service dialog method
				
			}
		});  
        
        
        
        btnThemKhuyenMai.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				showAddKhuyenMaiDialog(evt); // Call update service dialog method
				
			}
		});       
}
    private void updateKhuyenMai() {
    	int selectedRow = tbKhuyenMai.getSelectedRow();
    	if(selectedRow == -1) {
    		JOptionPane.showMessageDialog(this, "Chọn khuyến mãi cần cập nhật");
    		return;
    	}
    	String khuyenMaiID= (String) tbKhuyenMai.getValueAt(selectedRow, 0);
    	KhuyenMai_DAO khuyenMaiDAO = new KhuyenMai_DAO();
    	KhuyenMai khuyenMai = khuyenMaiDAO.getBangMaKhuyenMai(khuyenMaiID);
    	
    	JDialog updateKhuyenMaiDialog = createUpdateKhuyenMaiDialog(khuyenMai, khuyenMaiDAO);
    	updateKhuyenMaiDialog.setVisible(true);
    }  	
    private JDialog createUpdateKhuyenMaiDialog(KhuyenMai khuyenMai, KhuyenMai_DAO khuyenMaiDAO) {
        JDialog updateKhuyenMaiDialog = new JDialog();
        updateKhuyenMaiDialog.setTitle("Cập nhật khuyến mãi");
        updateKhuyenMaiDialog.setSize(800, 400);
        updateKhuyenMaiDialog.setLocationRelativeTo(this);
        updateKhuyenMaiDialog.setModal(true);
        
        // UI
        javax.swing.JTextField txtMaKhuyenMai = createTextField(khuyenMai.getMakhuyenMai(), false);
        txtMaKhuyenMai.setEditable(false);
        txtMaKhuyenMai.setEnabled(false);
        
        javax.swing.JTextField txtMoTa = new javax.swing.JTextField(khuyenMai.getMoTa(), 20);
        
        JDateChooser dateChooserNgayBatDau = new JDateChooser();
        dateChooserNgayBatDau.setDateFormatString("dd/MM/yyyy");
        dateChooserNgayBatDau.setDate(khuyenMai.getNgayBatDau());

        JDateChooser dateChooserNgayKetThuc = new JDateChooser();
        dateChooserNgayKetThuc.setDateFormatString("dd/MM/yyyy");
        dateChooserNgayKetThuc.setDate(khuyenMai.getNgayKetThuc());

        // Chuyển trạng thái thành JComboBox
        javax.swing.JComboBox<String> cbTrangThai = new javax.swing.JComboBox<>(new String[]{"Hoạt động", "Hết hạn"});
        cbTrangThai.setSelectedItem(khuyenMai.getTrangThai());
        cbTrangThai.setPreferredSize(new java.awt.Dimension(250, 30)); // Đặt kích thước phù hợp

        javax.swing.JTextField txtChietKhau = new javax.swing.JTextField(String.valueOf(khuyenMai.getChietKhau()), 20);
        txtChietKhau.setPreferredSize(new java.awt.Dimension(250, 30)); // Đặt kích thước phù hợp

        javax.swing.JButton btnSave = new javax.swing.JButton("Lưu");
        javax.swing.JButton btnCancel = new javax.swing.JButton("Hủy");

        // Thêm sự kiện cho btnSave và btnCancel
        btnSave.addActionListener(e -> updateKhuyenmaiData(
                updateKhuyenMaiDialog, 
                khuyenMai, 
                khuyenMaiDAO, 
                txtMoTa, 
                dateChooserNgayBatDau, 
                dateChooserNgayKetThuc, 
                cbTrangThai,  // Đảm bảo đây là JComboBox<String> chứ không phải JTextField
                txtChietKhau
        ));
        btnCancel.addActionListener(e -> updateKhuyenMaiDialog.dispose());

        // Panel setup
        javax.swing.JPanel formPanel = createFormPanel(txtMaKhuyenMai, txtMoTa, dateChooserNgayBatDau, dateChooserNgayKetThuc,
                cbTrangThai, txtChietKhau);
        javax.swing.JPanel buttonPanel = createButtonPanel(btnCancel, btnSave);

        // Main panel setup
        javax.swing.JPanel mainPanel = new javax.swing.JPanel();
        mainPanel.setLayout(new java.awt.BorderLayout(10, 10));
        mainPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        mainPanel.add(formPanel, java.awt.BorderLayout.CENTER);
        mainPanel.add(buttonPanel, java.awt.BorderLayout.SOUTH);

        updateKhuyenMaiDialog.add(mainPanel);
        return updateKhuyenMaiDialog;
    }

    private javax.swing.JPanel createFormPanel(javax.swing.JTextField txtMaKhuyenMai, javax.swing.JTextField txtMoTa, 
            JDateChooser dateChooserNgayBatDau, JDateChooser dateChooserNgayKetThuc, javax.swing.JComboBox<String> cbTrangThai, 
            javax.swing.JTextField txtChietKhau) {
        javax.swing.JPanel formPanel = new javax.swing.JPanel();
        formPanel.setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gbc = new java.awt.GridBagConstraints();
        gbc.insets = new java.awt.Insets(10, 10, 10, 10); // Tăng khoảng cách giữa các thành phần
        gbc.anchor = java.awt.GridBagConstraints.WEST;

        // Đặt kích thước lớn hơn cho các trường nhập liệu
        txtMaKhuyenMai.setPreferredSize(new java.awt.Dimension(250, 30));
        txtMoTa.setPreferredSize(new java.awt.Dimension(250, 30));
        dateChooserNgayBatDau.setPreferredSize(new java.awt.Dimension(250, 30));
        dateChooserNgayKetThuc.setPreferredSize(new java.awt.Dimension(250, 30));
        cbTrangThai.setPreferredSize(new java.awt.Dimension(250, 30));
        txtChietKhau.setPreferredSize(new java.awt.Dimension(250, 30));

        addComponent(formPanel, gbc, 0, 0, "Mã khuyến mãi:", txtMaKhuyenMai);
        addComponent(formPanel, gbc, 1, 0, "Trạng thái:", cbTrangThai);
        addComponent(formPanel, gbc, 0, 1, "Mô tả:", txtMoTa);
        addComponent(formPanel, gbc, 1, 1, "Chiết khấu:", txtChietKhau);
        addComponent(formPanel, gbc, 0, 2, "Ngày bắt đầu:", dateChooserNgayBatDau);
        addComponent(formPanel, gbc, 1, 2, "Ngày kết thúc:", dateChooserNgayKetThuc);
        return formPanel;
    }

    private void addComponent(javax.swing.JPanel panel, GridBagConstraints gbc, int gridX, int gridY, String labelText,
                              javax.swing.JComponent component) {
        // Thêm nhãn
        gbc.gridx = gridX * 2;
        gbc.gridy = gridY;
        gbc.anchor = GridBagConstraints.LINE_START;
        gbc.fill = GridBagConstraints.NONE;
        panel.add(new javax.swing.JLabel(labelText), gbc);

        // Thêm trường nhập liệu
        gbc.gridx = gridX * 2 + 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.weightx = 1.0;
        panel.add(component, gbc);
        
        gbc.weightx = 0; // Reset để không ảnh hưởng đến các thành phần khác
    }


    private void updateKhuyenmaiData(JDialog dialog, KhuyenMai khuyenMai, KhuyenMai_DAO khuyenMaiDAO,
            JTextField txtMoTa, JDateChooser dateChooserNgayBatDau, 
            JDateChooser dateChooserNgayKetThuc, JComboBox<String> cbTrangThai,
            JTextField txtChietKhau) {
	String moTa = txtMoTa.getText().trim();
	String chietKhauStr = txtChietKhau.getText().trim();
	String trangThai = (String) cbTrangThai.getSelectedItem(); // Lấy trạng thái từ JComboBox
	
	// Lấy ngày bắt đầu và ngày kết thúc
	java.util.Date ngayBatDauUtil = dateChooserNgayBatDau.getDate();
	java.util.Date ngayKetThucUtil = dateChooserNgayKetThuc.getDate();
	
	// Kiểm tra nếu ngày bắt đầu hoặc ngày kết thúc chưa được chọn
	if (ngayBatDauUtil == null || ngayKetThucUtil == null) {
	JOptionPane.showMessageDialog(dialog, "Vui lòng chọn ngày bắt đầu và ngày kết thúc.", "Thông báo",
	JOptionPane.WARNING_MESSAGE);
	return;
	}
	
	// Chuyển đổi từ java.util.Date sang java.sql.Date
	java.sql.Date ngayBatDau = new java.sql.Date(ngayBatDauUtil.getTime());
	java.sql.Date ngayKetThuc = new java.sql.Date(ngayKetThucUtil.getTime());
	
	// Kiểm tra đầu vào hợp lệ
	if (isInputValid(moTa, ngayBatDau, ngayKetThuc, trangThai, chietKhauStr)) {
	try {
	int chietKhau = Integer.parseInt(chietKhauStr);
	
	// Tự động cập nhật trạng thái nếu ngày hiện tại đã qua ngày kết thúc
	java.sql.Date currentDate = new java.sql.Date(System.currentTimeMillis());
	if (currentDate.after(ngayKetThuc)) {
	trangThai = "Hết hạn";
	cbTrangThai.setSelectedItem("Hết hạn"); // Cập nhật trạng thái trong ComboBox
	} else {
	trangThai = "Hoạt động";
	cbTrangThai.setSelectedItem("Hoạt động"); // Cập nhật trạng thái trong ComboBox
	}
	
	// Cập nhật thông tin khuyến mãi
	khuyenMai.setMoTa(moTa);
	khuyenMai.setNgayBatDau(ngayBatDau);
	khuyenMai.setNgayKetThuc(ngayKetThuc);
	khuyenMai.setTrangThai(trangThai);
	khuyenMai.setChietKhau(chietKhau);
	
	// Gọi phương thức DAO để cập nhật khuyến mãi
	if (khuyenMaiDAO.updateKhuyenMai(khuyenMai)) {
	loadDataToTable(); // Tải lại dữ liệu vào bảng
	JOptionPane.showMessageDialog(dialog, "Khuyến mãi cập nhật thành công");
	dialog.dispose();
	} else {
	JOptionPane.showMessageDialog(dialog, "Cập nhật không thành công.", "Lỗi", JOptionPane.ERROR_MESSAGE);
	}
	} catch (NumberFormatException ex) {
	JOptionPane.showMessageDialog(dialog, "Chiết khấu phải là số nguyên.", "Lỗi định dạng",
	JOptionPane.ERROR_MESSAGE);
	}
	} else {
	JOptionPane.showMessageDialog(dialog, "Vui lòng điền đầy đủ thông tin.", "Thông báo",
	JOptionPane.WARNING_MESSAGE);
	}
}

private boolean isInputValid(String moTa, java.util.Date ngayBatDau, java.util.Date ngayKetThuc, String trangThai, String chietKhau) {
    return !moTa.isEmpty() && ngayBatDau != null && ngayKetThuc != null && !trangThai.isEmpty() && !chietKhau.isEmpty();
}


private javax.swing.JTextField createTextField(String text, boolean editable) {
		javax.swing.JTextField textField = new javax.swing.JTextField(text, 20);
		textField.setEditable(editable);
		return textField;
}
   private java.sql.Date parseDate(String dateString) throws java.text.ParseException {
		java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat("dd/MM/yyyy");
		java.util.Date date = dateFormat.parse(dateString);
		return new java.sql.Date(date.getTime());
}
   private JPanel createButtonPanel(JButton btnCancel, JButton btnSave) {
	    JPanel buttonPanel = new JPanel();
	    buttonPanel.setLayout(new FlowLayout(FlowLayout.RIGHT));
	    buttonPanel.add(btnCancel);
	    buttonPanel.add(btnSave);
	    return buttonPanel;
	}
   
   public void showAddKhuyenMaiDialog(java.awt.event.MouseEvent evt) {
	    JDialog addKhuyenMaiDialog = new JDialog((Frame) null, "Thêm khuyến mãi", true);
	    addKhuyenMaiDialog.setSize(800, 400);
	    addKhuyenMaiDialog.setLocationRelativeTo(this);

	    // UI
	    KhuyenMai_DAO khuyenMaiDAO= new KhuyenMai_DAO();
	    String maKhuyenMai = khuyenMaiDAO.generateNewKhuyenMaiID();
	    if (maKhuyenMai == null) {
	        JOptionPane.showMessageDialog(addKhuyenMaiDialog, "Lỗi khi tạo mã khuyến mãi mới.", "Lỗi", JOptionPane.ERROR_MESSAGE);
	        return;
	    }
	    JTextField txtMaKhuyenMai = new JTextField(maKhuyenMai, 20);
	    txtMaKhuyenMai.setEditable(false);
	    txtMaKhuyenMai.setEnabled(false);

	    JTextField txtMoTa = new JTextField(20);
	    JDateChooser dateChooserNgayBatDau = new JDateChooser();
	    JDateChooser dateChooserNgayKetThuc = new JDateChooser();
	    dateChooserNgayBatDau.setDateFormatString("dd/MM/yyyy");
	    dateChooserNgayKetThuc.setDateFormatString("dd/MM/yyyy");

	    // Sử dụng JComboBox cho trạng thái
	    JComboBox<String> cbTrangThai = new JComboBox<>(new String[]{"Hoạt động", "Hết hạn"});
	    JTextField txtChietKhau = new JTextField(20);

	    // Chỉ cho phép nhập số trong trường "Chiết khấu"
	    ((AbstractDocument) txtChietKhau.getDocument()).setDocumentFilter(new DocumentFilter() {
	        public void insertString(FilterBypass fb, int offset, String string, javax.swing.text.AttributeSet attr) throws BadLocationException {
	            if (string.matches("\\d*")) { // Chỉ cho phép ký tự số
	                super.insertString(fb, offset, string, attr);
	            }
	        }

	        public void replace(FilterBypass fb, int offset, int length, String text, javax.swing.text.AttributeSet attrs) throws BadLocationException {
	            if (text.matches("\\d*")) { // Chỉ cho phép ký tự số
	                super.replace(fb, offset, length, text, attrs);
	            }
	        }
	    });
	    
	   

	    JButton btnSave = new JButton("Lưu");
	    JButton btnCancel = new JButton("Hủy");

	    // Layout components in a 2-column format
	    JPanel formPanel = new JPanel(new GridBagLayout());
	    GridBagConstraints gbc = new GridBagConstraints();
	    gbc.insets = new Insets(10, 10, 10, 10);
	    gbc.anchor = GridBagConstraints.WEST;
	    gbc.fill = GridBagConstraints.HORIZONTAL;  // Giãn ngang các trường nhập liệu
	    gbc.weightx = 1.0; 

	    // Set preferred sizes for consistent UI
	    txtMaKhuyenMai.setPreferredSize(new Dimension(250, 30));
	    txtMoTa.setPreferredSize(new Dimension(250, 30));
	    dateChooserNgayBatDau.setPreferredSize(new Dimension(250, 30));
	    dateChooserNgayKetThuc.setPreferredSize(new Dimension(250, 30));
	    cbTrangThai.setPreferredSize(new Dimension(250, 30));
	    txtChietKhau.setPreferredSize(new Dimension(250, 30));

	    // Add components to form panel with 2-column layout
	    addFormRow(formPanel, gbc, 0, 0, "Mã khuyến mãi:", txtMaKhuyenMai);
	    addFormRow(formPanel, gbc, 1, 0, "Trạng thái:", cbTrangThai);
	    addFormRow(formPanel, gbc, 0, 1, "Mô tả:", txtMoTa);
	    addFormRow(formPanel, gbc, 1, 1, "Chiết khấu:", txtChietKhau);
	    addFormRow(formPanel, gbc, 0, 2, "Ngày bắt đầu:", dateChooserNgayBatDau);
	    addFormRow(formPanel, gbc, 1, 2, "Ngày kết thúc:", dateChooserNgayKetThuc);

	    // Button panel setup
	    JPanel buttonPanel = new JPanel(new FlowLayout(FlowLayout.RIGHT));
	    buttonPanel.add(btnCancel);
	    buttonPanel.add(btnSave);

	    JPanel mainPanel = new JPanel(new BorderLayout(10, 10));
	    mainPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
	    mainPanel.add(formPanel, BorderLayout.CENTER);
	    mainPanel.add(buttonPanel, BorderLayout.SOUTH);

	    // Event Listeners
	    btnSave.addActionListener(e -> {
	        if (saveKhuyenMaiData(addKhuyenMaiDialog, txtMoTa, dateChooserNgayBatDau, dateChooserNgayKetThuc, cbTrangThai, txtChietKhau)) {
	            addKhuyenMaiDialog.dispose();
	        }
	    });
	    btnCancel.addActionListener(e -> addKhuyenMaiDialog.dispose());

	    addKhuyenMaiDialog.add(mainPanel);
	    addKhuyenMaiDialog.setVisible(true);
	}

	// Helper method to add components in a 2-column layout
   private void addFormRow(JPanel panel, GridBagConstraints gbc, int gridX, int gridY, String labelText, JComponent component) {
	    // Thêm nhãn
	    gbc.gridx = gridX * 2;  // Đặt nhãn ở cột đầu tiên (0, 2, 4, ...)
	    gbc.gridy = gridY;
	    gbc.weightx = 0; 
	    gbc.anchor = GridBagConstraints.LINE_START;
	    panel.add(new JLabel(labelText), gbc);

	    // Thêm trường nhập liệu
	    gbc.gridx = gridX * 2 + 1;  // Đặt trường nhập liệu ở cột tiếp theo (1, 3, 5, ...)
	    gbc.weightx = 1.0; 
	    gbc.anchor = GridBagConstraints.LINE_START;
	    panel.add(component, gbc);
	}
   
   private boolean saveToDatabase(String maKhuyenMai, String moTa, String ngayBatDau, String ngayKetThuc, String trangThai, String chietKhau) {
	    // Kết nối đến cơ sở dữ liệu
	    ConnectDB connectDB = new ConnectDB(); // Giả định rằng bạn có một lớp ConnectDB để quản lý kết nối cơ sở dữ liệu
	    try (Connection conn = connectDB.getConnection()) {
	        if (conn == null) {
	            JOptionPane.showMessageDialog(null, "Không thể kết nối tới cơ sở dữ liệu.", "Lỗi kết nối",
	                    JOptionPane.ERROR_MESSAGE);
	            return false;
	        }

	        // Chuyển đổi chuỗi ngày thành java.sql.Date
	        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
	        java.sql.Date sqlNgayBatDau;
	        java.sql.Date sqlNgayKetThuc;

	        try {
	            java.util.Date utilNgayBatDau = dateFormat.parse(ngayBatDau);
	            java.util.Date utilNgayKetThuc = dateFormat.parse(ngayKetThuc);
	            sqlNgayBatDau = new java.sql.Date(utilNgayBatDau.getTime());
	            sqlNgayKetThuc = new java.sql.Date(utilNgayKetThuc.getTime());
	        } catch (ParseException e) {
	            JOptionPane.showMessageDialog(null, "Định dạng ngày không hợp lệ.", "Lỗi định dạng ngày",
	                    JOptionPane.ERROR_MESSAGE);
	            return false;
	        }

	        // Tạo câu lệnh SQL để chèn dữ liệu vào bảng KhuyenMai
	        String sql = "INSERT INTO KhuyenMai (MaKhuyenMai, MoTa, NgayBatDau, NgayKetThuc, TrangThai, ChietKhau) VALUES (?, ?, ?, ?, ?, ?)";
	        
	        // Chuẩn bị câu lệnh SQL
	        try (PreparedStatement pstmt = conn.prepareStatement(sql)) {
	            pstmt.setString(1, maKhuyenMai);        // Thiết lập mã khuyến mãi
	            pstmt.setString(2, moTa);               // Thiết lập mô tả
	            pstmt.setDate(3, sqlNgayBatDau);        // Thiết lập ngày bắt đầu
	            pstmt.setDate(4, sqlNgayKetThuc);       // Thiết lập ngày kết thúc
	            pstmt.setString(5, trangThai);          // Thiết lập trạng thái
	            pstmt.setString(6, chietKhau);          // Thiết lập chiết khấu

	            // Thực hiện câu lệnh SQL và kiểm tra xem có bản ghi nào được chèn không
	            int rowInserted = pstmt.executeUpdate();
	            return rowInserted > 0; // Trả về true nếu có ít nhất một bản ghi được thêm thành công
	        }
	    } catch (SQLException e) {
	        e.printStackTrace();
	        JOptionPane.showMessageDialog(null, "Lỗi khi lưu dữ liệu vào cơ sở dữ liệu: " + e.getMessage(), "Lỗi",
	                JOptionPane.ERROR_MESSAGE);
	        return false;
	    }
	}



	// Adjusted saveKhuyenMaiData method to use JComboBox for trangThai
	private boolean saveKhuyenMaiData(JDialog dialog, JTextField txtMoTa, JDateChooser dateChooserNgayBatDau,
	                                  JDateChooser dateChooserNgayKetThuc, JComboBox<String> cbTrangThai, JTextField txtChietKhau) {
	    String moTa = txtMoTa.getText().trim();
	    java.util.Date ngayBatDau = dateChooserNgayBatDau.getDate();
	    java.util.Date ngayKetThuc = dateChooserNgayKetThuc.getDate();
	    String trangThai = (String) cbTrangThai.getSelectedItem();
	    String chietKhau = txtChietKhau.getText().trim();
	    
	    KhuyenMai_DAO khuyenMaiDAO= new KhuyenMai_DAO();
	    String maKhuyenMai = khuyenMaiDAO.generateNewKhuyenMaiID();

	    // Kiểm tra dữ liệu đầu vào
	    if (moTa.isEmpty() || ngayBatDau == null || ngayKetThuc == null || trangThai.isEmpty() || chietKhau.isEmpty()) {
	        JOptionPane.showMessageDialog(dialog, "Vui lòng điền đầy đủ thông tin.", "Thông báo", JOptionPane.WARNING_MESSAGE);
	        return false;
	    }

	    // Kiểm tra nếu chiết khấu là số nguyên
	    try {
	        int chietKhauInt = Integer.parseInt(chietKhau);

	        // Định dạng ngày
	        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
	        String formattedNgayBatDau = dateFormat.format(ngayBatDau);
	        String formattedNgayKetThuc = dateFormat.format(ngayKetThuc);

	        // Lưu dữ liệu vào cơ sở dữ liệu
	        if (saveToDatabase(khuyenMaiDAO.generateNewKhuyenMaiID(), moTa, formattedNgayBatDau, formattedNgayKetThuc, trangThai, String.valueOf(chietKhauInt))) {
	            // Cập nhật bảng
	            DefaultTableModel tableModel = (DefaultTableModel) tbKhuyenMai.getModel();
	            tableModel.addRow(new Object[]{khuyenMaiDAO.generateNewKhuyenMaiID(), moTa, formattedNgayBatDau, formattedNgayKetThuc, chietKhauInt, trangThai});
	            return true;
	        } else {
	            JOptionPane.showMessageDialog(dialog, "Lỗi lưu dữ liệu vào cơ sở dữ liệu.", "Lỗi", JOptionPane.ERROR_MESSAGE);
	            return false;
	        }
	    } catch (NumberFormatException e) {
	        JOptionPane.showMessageDialog(dialog, "Chiết khấu phải là số nguyên.", "Lỗi định dạng", JOptionPane.ERROR_MESSAGE);
	        return false;
	    }
	}

   
   
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel btnCapNhat;
    private javax.swing.JLabel btnThemKhuyenMai;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCapNhat;
    private javax.swing.JTable tbKhuyenMai;
    private javax.swing.JLabel titleHoaDon;
    // End of variables declaration//GEN-END:variables

   
}
