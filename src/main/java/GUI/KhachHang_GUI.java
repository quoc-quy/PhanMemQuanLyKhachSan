/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.Window;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RootPaneContainer;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

import com.toedter.calendar.JDateChooser;

import ConnectDB.ConnectDB;
import DAO.DanhSachDatPhong_DAO;
import DAO.KhachHang_DAO;
import ENTITY.KhachHang;

/**
 *
 * @author 84837
 * @param <btnLuuMouseClicked>
 */
public class KhachHang_GUI<btnLuuMouseClicked> extends javax.swing.JPanel {
	private DefaultTableModel originalModel;
	private static KhachHang_GUI instance;
    private DefaultTableModel tableModel;
	private KhachHang_DAO dsKHDAO = new KhachHang_DAO();
	private DatPhong_Dialog_GUI parentPanelPhong;
	private KhachHang_GUI parentPanel;
	private String maPhong;
	private Phong_GUI phongGUI;

	/**
     * Creates new form KhachHang_GUI
     */
    public KhachHang_GUI() {
        initComponents();
        
        instance = this;
        addSelectionListenerToTable();
        
        updateHeader();
        
     // Đổ dữ liệu vào JTable
        loadDataToTable();
        refreshTable();
        
        // Lưu model ban đầu ngay khi khởi tạo
        originalModel = (DefaultTableModel) tbKhachHang.getModel();

//        Chức năng tìm kiếm
        btnTimKiem.addActionListener(e -> filterTableData());
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMaKhachHang = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPhai = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        dateChooserNgaySinh = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtSoDienThoai = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtCCCD = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        txtTenKhachHang = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        titleHoaDon = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbKhachHang = new javax.swing.JTable();
        btnHuy = new javax.swing.JPanel();
        btnHuy = new RoundedPanel(20);
        jLabel1 = new javax.swing.JLabel();
        lblCapNhat = new javax.swing.JLabel();
        RoundedPanel btnThemKH = new RoundedPanel(20);
        btnCapNhat = new javax.swing.JPanel();
        btnCapNhat = new RoundedPanel(20);
        jLabel3 = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        jPanel2.setPreferredSize(new java.awt.Dimension(1000, 800));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("Cập nhật khách hàng");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel5.setText("Mã khách hàng");

        txtMaKhachHang.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtMaKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaKhachHangActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel6.setText("Tên khách hàng");

        txtPhai.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtPhai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhaiActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel7.setText("Ngày sinh");

        dateChooserNgaySinh.setDateFormatString("dd/mm/yyyy");
        dateChooserNgaySinh.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel8.setText("Giới tính");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel9.setText("Điện thoại");

        txtSoDienThoai.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtSoDienThoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSoDienThoaiActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel10.setText("Số CCCD");

        txtCCCD.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtCCCD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCCCDActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(25, 159, 254));
        btnSave.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Lưu");
        btnSave.setBorder(null);
        btnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSaveMouseClicked(evt);
            }
        });
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setBackground(new java.awt.Color(102, 102, 102));
        btnCancel.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btnCancel.setText("Hủy");
        btnCancel.setBorder(null);
        btnCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelMouseClicked(evt);
            }
        });
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        txtTenKhachHang.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtTenKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenKhachHangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                                .addComponent(txtMaKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(51, 51, 51))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(39, 39, 39)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPhai, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                                    .addComponent(dateChooserNgaySinh, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                                    .addComponent(txtTenKhachHang, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE))))
                        .addGap(55, 55, 55)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSoDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCCCD, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(30, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel2)
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtMaKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txtCCCD, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel9)
                    .addComponent(txtSoDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTenKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(dateChooserNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel7)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(txtPhai, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 918, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 408, Short.MAX_VALUE)
                .addContainerGap())
        );

        setLayout(new java.awt.CardLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        titleHoaDon.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        titleHoaDon.setText("Danh sách khách hàng");

        tbKhachHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object[][] {},  // Bắt đầu với dữ liệu rỗng
            new String[] { "Mã khách hàng", "Tên khách hàng", "CCCD", "Phái", "Ngày sinh", "Điện thoại" }
        ) {
            Class<?>[] types = new Class<?>[] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class,
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;  // Không cho phép chỉnh sửa dữ liệu trong bảng
            }
        });
        tbKhachHang.setRowHeight(40);
        jScrollPane1.setViewportView(tbKhachHang);

        btnHuy.setBackground(new java.awt.Color(255, 0, 0));
        btnHuy.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHuy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHuyMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/delete.png"))); // NOI18N
        jLabel1.setText("Xóa");

        javax.swing.GroupLayout btnHuyLayout = new javax.swing.GroupLayout(btnHuy);
        btnHuy.setLayout(btnHuyLayout);
        btnHuyLayout.setHorizontalGroup(
            btnHuyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnHuyLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                .addContainerGap())
        );
        btnHuyLayout.setVerticalGroup(
            btnHuyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnHuyLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        btnCapNhat.setBackground(new java.awt.Color(245, 109, 40));
        btnCapNhat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        lblCapNhat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblCapNhat.setForeground(new java.awt.Color(255, 255, 255));
        lblCapNhat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCapNhat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/fixing.png"))); // NOI18N
        lblCapNhat.setText("Cập nhật");

        javax.swing.GroupLayout btnCapNhatLayout = new javax.swing.GroupLayout(btnCapNhat);
        btnCapNhat.setLayout(btnCapNhatLayout);
        btnCapNhatLayout.setHorizontalGroup(
            btnCapNhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblCapNhat, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
        );
        btnCapNhatLayout.setVerticalGroup(
            btnCapNhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnCapNhatLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblCapNhat)
                .addContainerGap())
        );

        btnThemKH.setBackground(new java.awt.Color(25, 159, 254));
        btnThemKH.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnThemKH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThemKHMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/add.png"))); // NOI18N
        jLabel3.setText("Thêm KH");

        javax.swing.GroupLayout btnThemKHLayout = new javax.swing.GroupLayout(btnThemKH);
        btnThemKH.setLayout(btnThemKHLayout);
        btnThemKHLayout.setHorizontalGroup(
            btnThemKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnThemKHLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        btnThemKHLayout.setVerticalGroup(
            btnThemKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnThemKHLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap())
        );

        txtTimKiem.setForeground(new java.awt.Color(144, 144, 144));
        txtTimKiem.setText("Nhập tên, CCCD để tìm");
        txtTimKiem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTimKiemFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTimKiemFocusLost(evt);
            }
        });

        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/Search.png"))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Tìm khách hàng");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(titleHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 703, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTimKiem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnThemKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(titleHoaDon)
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnThemKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(12, 12, 12))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE))
        );

        add(jPanel1, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void txtTimKiemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimKiemFocusGained
        // TODO add your handling code here:
    	txtTimKiem.setText("");
        txtTimKiem.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtTimKiemFocusGained

    private void btnThemKHMouseClicked(java.awt.event.MouseEvent evt) {
    	Window window = SwingUtilities.getWindowAncestor(this);
    	ThemKhachHangDialog_GUI dialog = new ThemKhachHangDialog_GUI(parentPanel, true);
    	dialog.setVisible(true);
    }

    private void btnHuyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHuyMouseClicked
    	int selectedRow = tbKhachHang.getSelectedRow(); // Lấy dòng được chọn
        if (selectedRow != -1) {
            // Hiển thị hộp thoại xác nhận
            int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa khách hàng này không?", "Xác nhận hủy", JOptionPane.YES_NO_OPTION);
            
            // Nếu người dùng chọn YES thì thực hiện xóa
            if (confirm == JOptionPane.YES_OPTION) {
                String maKH = tbKhachHang.getValueAt(selectedRow, 0).toString(); // Giả sử mã hóa đơn ở cột thứ 2

                // Gọi phương thức xóa từ DAO
                boolean isDeleted = dsKHDAO.xoaKhachHang(maKH);

                if (isDeleted) {
                    // Xóa dòng khỏi bảng giao diện sau khi xóa thành công
                    ((DefaultTableModel) tbKhachHang.getModel()).removeRow(selectedRow);
                    refreshTable();
                    JOptionPane.showMessageDialog(this, "Xóa thành công!");
                } else {
                    JOptionPane.showMessageDialog(this, "Xóa không thành công!");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn dòng cần xóa!");
        }
    }//GEN-LAST:event_btnHuyMouseClicked

    private void txtMaKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaKhachHangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaKhachHangActionPerformed

    private void txtPhaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhaiActionPerformed

    private void txtSoDienThoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSoDienThoaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSoDienThoaiActionPerformed

    private void txtCCCDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCCCDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCCCDActionPerformed

    private void btnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSaveMouseClicked

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelMouseClicked
        // TODO add your handling code here:
       
    }//GEN-LAST:event_btnCancelMouseClicked

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtTenKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenKhachHangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenKhachHangActionPerformed

    private void txtTimKiemFocusLost(java.awt.event.FocusEvent evt) {
        txtTimKiem.setForeground(Color.decode("#909090"));
    }                                    
    private void updateHeader(){
        JTableHeader header = tbKhachHang.getTableHeader();
         header.setFont(new Font("Times new Romans", Font.BOLD, 16));
    }
    
    
    public void updateKhachHang() {
    	int selectedRow = tbKhachHang.getSelectedRow();
    	if(selectedRow == -1) {
    		JOptionPane.showMessageDialog(this, "Chọn khách hàng cần cập nhật");
    		return;
    	}
    	
    	String khachHangID = (String) tbKhachHang.getValueAt(selectedRow, 0);
        if (khachHangID == null || khachHangID.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy ID khách hàng trong bảng.");
            return;
        }

        // Tìm khách hàng từ CSDL
        KhachHang_DAO khachHangDAO = new KhachHang_DAO();
        KhachHang khachHang = khachHangDAO.findMaKhachHangID(khachHangID);

        // Kiểm tra nếu không tìm thấy khách hàng
        if (khachHang == null) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy khách hàng với ID: " + khachHangID);
            return;
        }

        // Nếu tìm thấy khách hàng, mở hộp thoại cập nhật
        JDialog updateKhachHangDialog = createUpdateKhachHangDialog(khachHang, khachHangDAO);
        updateKhachHangDialog.setVisible(true);
    }
    public JDialog createUpdateKhachHangDialog(KhachHang khachHang, KhachHang_DAO khachHangDAO) {
    	JDialog  updateKhachHangDialog = new JDialog();
    	updateKhachHangDialog.setTitle("Cập nhật khách hàng");
    	updateKhachHangDialog.setSize(800,400);
    	updateKhachHangDialog.setLocationRelativeTo(this);
    	updateKhachHangDialog.setModal(true);
    	
//  	UI
    	javax.swing.JTextField txtMaKhachHang = createTextField(khachHang.getMaKhachHang(), false);
        txtMaKhachHang.setEditable(false);
        txtMaKhachHang.setEnabled(false);
        txtMaKhachHang.setPreferredSize(new java.awt.Dimension(200, 25));

        javax.swing.JTextField txtTenKhachHang = new javax.swing.JTextField(khachHang.getTenKhachHang(), 20);
        txtTenKhachHang.setPreferredSize(new java.awt.Dimension(200, 25));

        javax.swing.JTextField txtCCCD = new javax.swing.JTextField(khachHang.getCCCD(), 20);
        txtCCCD.setPreferredSize(new java.awt.Dimension(200, 25));

        // Sử dụng JComboBox cho trường "Phái"
        javax.swing.JComboBox<String> cbPhai = new javax.swing.JComboBox<>(new String[]{"Nam", "Nữ"});
        cbPhai.setSelectedItem(khachHang.getPhai()); // Đặt giá trị mặc định từ đối tượng khachHang
        cbPhai.setPreferredSize(new java.awt.Dimension(180, 25));

        JDateChooser dateChooserNgaySinh = new JDateChooser();
        dateChooserNgaySinh.setDateFormatString("dd/MM/yyyy");
        dateChooserNgaySinh.setDate(khachHang.getNgaySinh());
        dateChooserNgaySinh.setPreferredSize(new java.awt.Dimension(200, 25));

        javax.swing.JTextField txtSoDienThoai = new javax.swing.JTextField(khachHang.getDienThoai(), 20);
        txtSoDienThoai.setPreferredSize(new java.awt.Dimension(200, 25));

        javax.swing.JButton btnSave = new javax.swing.JButton("Lưu");
        btnSave.setBackground(new java.awt.Color(51, 153, 255)); // Màu xanh dương
        btnSave.setForeground(java.awt.Color.WHITE); // Màu chữ trắng
        
        javax.swing.JButton btnCancel = new javax.swing.JButton("Hủy");
        btnCancel.setBackground(new java.awt.Color(128, 128, 128)); // Màu xám
        btnCancel.setForeground(java.awt.Color.WHITE); // Màu chữ trắng


		
		btnSave.addActionListener(e->updateKhachHangData(updateKhachHangDialog,khachHang,khachHangDAO,
				txtTenKhachHang,txtCCCD,cbPhai,dateChooserNgaySinh,txtSoDienThoai));
		
		btnCancel.addActionListener(e -> updateKhachHangDialog.dispose());
		
		javax.swing.JPanel formPanel = createFormPanel(txtMaKhachHang, txtTenKhachHang, txtCCCD, cbPhai,
				  dateChooserNgaySinh ,txtSoDienThoai);
		javax.swing.JPanel buttonPanel = createButtonPanel(btnCancel, btnSave);
		
		javax.swing.JPanel mainPanel = new javax.swing.JPanel();
		mainPanel.setLayout(new java.awt.BorderLayout(10, 10));
		mainPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
		mainPanel.add(formPanel, java.awt.BorderLayout.CENTER);
		mainPanel.add(buttonPanel, java.awt.BorderLayout.SOUTH);

		updateKhachHangDialog.add(mainPanel);
		return updateKhachHangDialog;
    }
    
 private JPanel createFormPanel(JTextField txtMaKhachHang, JTextField txtTenKhachHang, JTextField txtCCCD,
		 JComboBox<String> cbPhai, JDateChooser dateChooserNgaySinh, JTextField txtSoDienThoai) {
		// TODO Auto-generated method stub
	 	javax.swing.JPanel formPanel = new javax.swing.JPanel();
		formPanel.setLayout(new java.awt.GridBagLayout());
		java.awt.GridBagConstraints gbc = new java.awt.GridBagConstraints();
		gbc.insets = new java.awt.Insets(10, 10, 10, 10);
		gbc.anchor = java.awt.GridBagConstraints.WEST;
		
		txtMaKhachHang.setPreferredSize(new java.awt.Dimension(250, 30));
	    txtTenKhachHang.setPreferredSize(new java.awt.Dimension(250, 30));
	    txtCCCD.setPreferredSize(new java.awt.Dimension(250, 30));
	    cbPhai.setPreferredSize(new java.awt.Dimension(250, 30));
	    dateChooserNgaySinh.setPreferredSize(new java.awt.Dimension(250, 30));
	    txtSoDienThoai.setPreferredSize(new java.awt.Dimension(250, 30));
		
		addComponent(formPanel, gbc, 0, 0, "Mã khách hàng:", txtMaKhachHang);
	    addComponent(formPanel, gbc, 0, 1, "Tên khách hàng:", txtTenKhachHang);
	    addComponent(formPanel, gbc, 0, 2, "CCCD:", txtCCCD);
	    addComponent(formPanel, gbc, 1, 0, "Phái:", cbPhai);
	    addComponent(formPanel, gbc, 1, 1, "Ngày sinh:", dateChooserNgaySinh);
	    addComponent(formPanel, gbc, 1, 2, "Số điện thoại:", txtSoDienThoai);
		return formPanel;
	}
 
 

 private void addComponent(JPanel panel, GridBagConstraints gbc, int gridX, int gridY, String labelText,
         javax.swing.JComponent component) {
// Cấu hình cho nhãn
		gbc.gridx = gridX * 2; // Cột đầu tiên của nhãn (0, 2, 4, ...)
		gbc.gridy = gridY;
		gbc.anchor = GridBagConstraints.LINE_START; // Căn trái nhãn
		gbc.fill = GridBagConstraints.NONE; // Không cho nhãn giãn
		panel.add(new javax.swing.JLabel(labelText), gbc);
		
		// Cấu hình cho thành phần nhập liệu
		gbc.gridx = gridX * 2 + 1; // Cột tiếp theo của thành phần (1, 3, 5, ...)
		gbc.fill = GridBagConstraints.HORIZONTAL; // Đặt giãn ngang cho trường nhập liệu
		gbc.weightx = 1.0; // Cho phép thành phần giãn theo chiều ngang
		panel.add(component, gbc);
		
		// Reset lại weightx để không ảnh hưởng đến các hàng sau
		gbc.weightx = 0;
}


private void updateKhachHangData(JDialog dialog, KhachHang khachHang, KhachHang_DAO khachHangDAO,
        JTextField txtTenKhachHang, JTextField txtCCCD, JComboBox<String> cbPhai, JDateChooser dateChooserNgaySinh,
        JTextField txtSoDienThoai) {
    
    // Lấy và chuẩn hóa dữ liệu đầu vào từ các trường văn bản
    String tenKhachHang = txtTenKhachHang.getText().trim();
    String CCCD = txtCCCD.getText().trim();
    String phai = cbPhai.getSelectedItem().toString().trim();
    String sdt = txtSoDienThoai.getText().trim();

    // Kiểm tra nếu ngày sinh chưa được chọn
    java.util.Date ngaySinhUtil = dateChooserNgaySinh.getDate();
    if (ngaySinhUtil == null) {
        JOptionPane.showMessageDialog(dialog, "Vui lòng chọn ngày sinh.", "Thông báo",
                JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Chuyển đổi từ java.util.Date sang java.sql.Date
//    java.sql.Date ngaySinh = new java.sql.Date(ngaySinhUtil.getTime());

    // Kiểm tra đầu vào hợp lệ trước khi thực hiện cập nhật
    if (isInputValid(tenKhachHang, CCCD, phai, ngaySinhUtil, sdt)) {
        try {
        	
        	java.sql.Date ngaySinh = new java.sql.Date(ngaySinhUtil.getTime());

            // Thiết lập các giá trị mới cho đối tượng khách hàng
            khachHang.setTenKhachHang(tenKhachHang);
            khachHang.setCCCD(CCCD);
            khachHang.setPhai(phai);
            khachHang.setNgaySinh(ngaySinh);  // Sử dụng java.sql.Date để lưu vào cơ sở dữ liệu
            khachHang.setDienThoai(sdt);

            // Cập nhật thông tin khách hàng trong cơ sở dữ liệu
            if (khachHangDAO.updateKhachHang(khachHang)) {
                loadDataToTable();  // Tải lại dữ liệu vào bảng hiển thị
                JOptionPane.showMessageDialog(dialog, "Khách hàng cập nhật thành công");
                dialog.dispose();
            } else {
                JOptionPane.showMessageDialog(dialog, "Cập nhật không thành công.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(dialog, "Có lỗi xảy ra khi cập nhật khách hàng: " + ex.getMessage(),
                    "Lỗi định dạng", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(dialog, "Vui lòng điền đầy đủ thông tin.", "Thông báo",
                JOptionPane.WARNING_MESSAGE);
    }
}

private boolean isInputValid(String tenKhachHang, String CCCD, String phai, java.util.Date ngaySinh, String sdt) {
    if (tenKhachHang == null || tenKhachHang.isEmpty() ||
    		CCCD == null ||CCCD.isEmpty() || 
    		phai == null ||phai.isEmpty() || 
    		ngaySinh == null || sdt == null ||sdt.isEmpty()) {
        return false;
    }
    
    // Kiểm tra định dạng số điện thoại (chỉ chứa số, độ dài 10-11 ký tự)
    if (!sdt.matches("\\d{10,11}")) {
        JOptionPane.showMessageDialog(null, "Số điện thoại phải chứa 10-11 chữ số.");
        return false;
    }
    
    // Kiểm tra CCCD (ví dụ: phải là chuỗi số và độ dài hợp lệ)
    if (!CCCD.matches("\\d{9,12}")) {  // Giả sử CCCD là chuỗi số với 9-12 ký tự
        JOptionPane.showMessageDialog(null, "CCCD phải là số và có độ dài từ 9-12 chữ số.");
        return false;
    }
    
    return true;
}
 
 
 private javax.swing.JTextField createTextField(String text, boolean editable) {
		javax.swing.JTextField textField = new javax.swing.JTextField(text, 20);
		textField.setEditable(editable);
		return textField;
 }
 private java.sql.Date parseDate(String dateString) throws java.text.ParseException {
		java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat("dd/MM/yyyy");
		java.util.Date date = dateFormat.parse(dateString);
		return new java.sql.Date(date.getTime());
	}
 
 private JPanel createButtonPanel(JButton btnCancel, JButton btnSave) {
		// TODO Auto-generated method stub
		   javax.swing.JPanel buttonPanel = new javax.swing.JPanel();
			buttonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));
			buttonPanel.add(btnCancel);
			buttonPanel.add(btnSave);
			return buttonPanel;  
		
	}

 // Hàm đổ dữ liệu từ database vào JTable
    public void loadDataToTable() {
    	
//    	KhachHang_DAO khachHangDAO = new KhachHang_DAO();
        List<KhachHang> dsKhachHang = dsKHDAO.getAllKhachHang();
        
      DefaultTableModel tableModel = new DefaultTableModel(
		    new Object[][] {},  // Bắt đầu với dữ liệu rỗng
		    new String[] { "Mã khách hàng", "Tên khách hàng", "CCCD", "Phái", "Ngày sinh", "Điện thoại" }
		);
  	tbKhachHang.setModel(tableModel);
        
        tableModel.setRowCount(0);

        // Định dạng ngày theo dd/MM/yyyy
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");

        for (KhachHang kh : dsKhachHang) {
            Object[] row = {
                kh.getMaKhachHang(),
                kh.getTenKhachHang(),
                kh.getCCCD(),
                kh.getPhai(),
                dateFormat.format(kh.getNgaySinh()),  // Định dạng ngày sinh
                kh.getDienThoai()
            };
            tableModel.addRow(row);
//            tableModel.fireTableDataChanged();
        }
        
       
        
        lblCapNhat.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				if (tbKhachHang.getSelectedRow() != -1) { // Check if a row is selected
					updateKhachHang();
					; // Call update service dialog method
				}
			}
		});
        
        btnCapNhat.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				if (tbKhachHang.getSelectedRow() != -1) { // Check if a row is selected
					updateKhachHang(); // Call update service dialog method
				}
			}
		});
        
        btnCapNhat.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				updateKhachHang(); // Call update service dialog method
				
			}
		}); 
        tableModel.fireTableDataChanged();
        tbKhachHang.repaint();
        tbKhachHang.revalidate();
        
    }


    
 // Phương thức lọc dữ liệu
    private void filterTableData() {
        String keyword = txtTimKiem.getText().trim().toLowerCase(); // Lấy từ khóa tìm kiếm

        // Kiểm tra nếu từ khóa rỗng, khôi phục dữ liệu ban đầu
        if (keyword.isEmpty()) {
        	tbKhachHang.setModel(originalModel); // Khôi phục model ban đầu
            return;
        }

        // Tạo model mới để chứa dữ liệu lọc
        DefaultTableModel filteredModel = new DefaultTableModel(
        		new String[] { "Mã khách hàng", "Tên khách hàng", "CCCD", "Phái", "Ngày sinh", "Điện thoại" }, 
                0
        );

        boolean found = false; // Đánh dấu nếu tìm thấy dữ liệu

        // Duyệt qua từng hàng trong originalModel và lọc dữ liệu
        for (int i = 0; i < originalModel.getRowCount(); i++) {// Lấy tên khách hàng và mã phòng, kiểm tra null và loại bỏ khoảng trắng
            String tenKhachHang = originalModel.getValueAt(i, 1) != null 
                    ? originalModel.getValueAt(i, 1).toString().trim().toLowerCase() 
                    : "";
			String cccd = originalModel.getValueAt(i, 2) != null 
			               ? originalModel.getValueAt(i, 2).toString().trim().toLowerCase() 
			               : "";
			

            // Kiểm tra nếu từ khóa xuất hiện trong tên khách hàng hoặc mã phòng
            if (tenKhachHang.contains(keyword) || cccd.contains(keyword)) {
                filteredModel.addRow(new Object[]{
                    originalModel.getValueAt(i, 0),
                    originalModel.getValueAt(i, 1), 
                    originalModel.getValueAt(i, 2), 
                    originalModel.getValueAt(i, 3),
                    originalModel.getValueAt(i, 4),
                    originalModel.getValueAt(i, 5)
                });
                found = true; // Đánh dấu là đã tìm thấy dữ liệu
            }
        }

        // Cập nhật JTable với model đã lọc hoặc hiển thị thông báo nếu không tìm thấy
        if (found) {
        	tbKhachHang.setModel(filteredModel);
        } else {
            JOptionPane.showMessageDialog(this, "Không tìm thấy dữ liệu phù hợp!");
        }
    }
    
    private void addSelectionListenerToTable() {
        btnHuy.setEnabled(false);
        btnCapNhat.setEnabled(false);
        btnHuy.setBackground(Color.gray);
        btnCapNhat.setBackground(Color.gray);

        // Thêm ListSelectionListener để theo dõi việc chọn hàng trong bảng
        tbKhachHang.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) { // Đảm bảo chỉ xử lý khi việc chọn kết thúc
                    if (tbKhachHang.getSelectedRow() != -1) { // Kiểm tra có hàng nào được chọn không
                        // Kích hoạt lại các nút khi có dòng được chọn
                        btnHuy.setEnabled(true);
                        btnCapNhat.setEnabled(true); 
                        btnHuy.setBackground(Color.red);
                        btnCapNhat.setBackground(Color.orange);
                    } 
                }
            }
        });
    }
    
    public static KhachHang_GUI getInstance() {
        return instance;
    }
    
//    làm mới bảng khi thêm mới dữ liệu
    public void refreshTable() {
        // Lấy danh sách khách hàng
        List<KhachHang> danhSachKhachHang = dsKHDAO.getAllKhachHang();
        
        if (danhSachKhachHang == null || danhSachKhachHang.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Danh sách khách hàng trống.");
            return;
        }
        
        // Lấy mô hình bảng và xóa dữ liệu cũ
        DefaultTableModel tableModel = (DefaultTableModel) tbKhachHang.getModel();
        tableModel.setRowCount(0); // Xóa dữ liệu cũ trong bảng

        // Định dạng ngày tháng
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");

        // Kiểm tra danh sách khách hàng và cập nhật bảng
        for (KhachHang kh : danhSachKhachHang) {
                tableModel.addRow(new Object[]{
                    kh.getMaKhachHang(),
                    kh.getTenKhachHang(),
                    kh.getCCCD(),
                    kh.getPhai(),
                    dateFormat.format(kh.getNgaySinh()), // Áp dụng định dạng ngày tháng
                    kh.getDienThoai()
                });
            }
        tableModel.fireTableDataChanged();
            
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JPanel btnCapNhat;
    private javax.swing.JPanel btnHuy;
    private javax.swing.JButton btnSave;
    private javax.swing.JPanel btnThemKH;
    private javax.swing.JButton btnTimKiem;
    private com.toedter.calendar.JDateChooser dateChooserNgaySinh;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCapNhat;
    private javax.swing.JTable tbKhachHang;
    private javax.swing.JLabel titleHoaDon;
    private javax.swing.JTextField txtCCCD;
    private javax.swing.JTextField txtMaKhachHang;
    private javax.swing.JTextField txtPhai;
    private javax.swing.JTextField txtSoDienThoai;
    private javax.swing.JTextField txtTenKhachHang;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
